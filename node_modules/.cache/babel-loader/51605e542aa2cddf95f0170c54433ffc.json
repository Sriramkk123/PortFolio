{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sriram\\\\Desktop\\\\react-bootcamp\\\\portfolio\\\\src\\\\projects\\\\music-master\\\\components\\\\Tracks.js\";\nimport React, { Component } from \"react\";\n\nclass Tracks extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playing: false,\n      audio: null,\n      playingPreviewUrl: null\n    };\n\n    this.playAudio = previewUrl => () => {\n      const audio = new Audio(previewUrl);\n\n      if (!this.state.playing) {\n        audio.play();\n        this.setState({\n          playing: true,\n          audio,\n          playingPreviewUrl: previewUrl\n        });\n      } else {\n        this.state.audio.pause();\n\n        if (this.state.playingPreviewUrl === previewUrl) {\n          this.setState({\n            playing: false\n          });\n        } else {\n          audio.play();\n          this.setState({\n            audio,\n            playingPreviewUrl: previewUrl\n          });\n        }\n\n        this.setState({\n          playing: false\n        });\n      }\n    };\n\n    this.trackIcon = track => {\n      if (!track.preview_url) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 20\n          }\n        }, \"N/A\");\n      }\n\n      if (this.state.playing && this.state.playingPreviewUrl === track.preview_url) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 20\n          }\n        }, \"| |\");\n      }\n\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 16\n        }\n      }, \"\\u25B6\");\n    };\n  }\n\n  render() {\n    const {\n      tracks\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, tracks.map(track => {\n      const {\n        id,\n        name,\n        album,\n        preview_url\n      } = track;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: id,\n        onClick: this.playAudio(preview_url),\n        className: \"track\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: album.images[0].url,\n        alt: \"track-artist\",\n        className: \"track-image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"track-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }\n      }, name), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"track-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }\n      }, \" \", this.trackIcon(track), \">\"));\n    }));\n  }\n\n}\n\nexport default Tracks;","map":{"version":3,"sources":["C:/Users/Sriram/Desktop/react-bootcamp/portfolio/src/projects/music-master/components/Tracks.js"],"names":["React","Component","Tracks","state","playing","audio","playingPreviewUrl","playAudio","previewUrl","Audio","play","setState","pause","trackIcon","track","preview_url","render","tracks","props","map","id","name","album","images","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA8B;AAAA;AAAA;AAAA,SAC1BE,KAD0B,GAClB;AAACC,MAAAA,OAAO,EAAC,KAAT;AAAeC,MAAAA,KAAK,EAAC,IAArB;AAA0BC,MAAAA,iBAAiB,EAAC;AAA5C,KADkB;;AAAA,SAG1BC,SAH0B,GAGdC,UAAU,IAAI,MAAK;AAC3B,YAAMH,KAAK,GAAG,IAAII,KAAJ,CAAUD,UAAV,CAAd;;AACA,UAAG,CAAC,KAAKL,KAAL,CAAWC,OAAf,EAAuB;AACnBC,QAAAA,KAAK,CAACK,IAAN;AACA,aAAKC,QAAL,CAAc;AAACP,UAAAA,OAAO,EAAC,IAAT;AAAcC,UAAAA,KAAd;AAAoBC,UAAAA,iBAAiB,EAACE;AAAtC,SAAd;AACH,OAHD,MAGK;AACD,aAAKL,KAAL,CAAWE,KAAX,CAAiBO,KAAjB;;AACA,YAAG,KAAKT,KAAL,CAAWG,iBAAX,KAAiCE,UAApC,EAA+C;AAC3C,eAAKG,QAAL,CAAc;AAACP,YAAAA,OAAO,EAAC;AAAT,WAAd;AACH,SAFD,MAGI;AACAC,UAAAA,KAAK,CAACK,IAAN;AACA,eAAKC,QAAL,CAAc;AAACN,YAAAA,KAAD;AAAOC,YAAAA,iBAAiB,EAACE;AAAzB,WAAd;AACH;;AACD,aAAKG,QAAL,CAAc;AAACP,UAAAA,OAAO,EAAC;AAAT,SAAd;AACH;AACJ,KAnByB;;AAAA,SAqB1BS,SArB0B,GAqBdC,KAAK,IAAG;AAChB,UAAG,CAACA,KAAK,CAACC,WAAV,EAAsB;AAClB,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACH;;AACD,UAAG,KAAKZ,KAAL,CAAWC,OAAX,IACK,KAAKD,KAAL,CAAWG,iBAAX,KAAiCQ,KAAK,CAACC,WAD/C,EAC2D;AACvD,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACH;;AACD,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,KA9ByB;AAAA;;AAgC1BC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAW,KAAKC,KAAtB;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEID,MAAM,CAACE,GAAP,CAAWL,KAAK,IAAE;AACd,YAAM;AAACM,QAAAA,EAAD;AAAIC,QAAAA,IAAJ;AAASC,QAAAA,KAAT;AAAeP,QAAAA;AAAf,UAA8BD,KAApC;AACA,0BACI;AACI,QAAA,GAAG,EAAIM,EADX;AAEI,QAAA,OAAO,EAAG,KAAKb,SAAL,CAAeQ,WAAf,CAFd;AAGI,QAAA,SAAS,EAAG,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII;AAAK,QAAA,GAAG,EAAIO,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgBC,GAA5B;AACA,QAAA,GAAG,EAAG,cADN;AAEA,QAAA,SAAS,EAAG,aAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,eAOI;AAAG,QAAA,SAAS,EAAG,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BH,IAA7B,CAPJ,eAQI;AAAG,QAAA,SAAS,EAAG,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA8B,KAAKR,SAAL,CAAeC,KAAf,CAA9B,MARJ,CADJ;AAYH,KAdD,CAFJ,CADJ;AAqBH;;AAxDyB;;AA2D9B,eAAeZ,MAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Tracks extends Component{\r\n    state = {playing:false,audio:null,playingPreviewUrl:null};\r\n    \r\n    playAudio = previewUrl => () =>{\r\n        const audio = new Audio(previewUrl);\r\n        if(!this.state.playing){\r\n            audio.play();\r\n            this.setState({playing:true,audio,playingPreviewUrl:previewUrl})\r\n        }else{\r\n            this.state.audio.pause();\r\n            if(this.state.playingPreviewUrl === previewUrl){\r\n                this.setState({playing:false});\r\n            }\r\n            else{\r\n                audio.play();\r\n                this.setState({audio,playingPreviewUrl:previewUrl});\r\n            }\r\n            this.setState({playing:false});\r\n        }\r\n    }\r\n\r\n    trackIcon = track =>{\r\n        if(!track.preview_url){\r\n            return <span>N/A</span>;\r\n        }\r\n        if(this.state.playing\r\n             && this.state.playingPreviewUrl === track.preview_url){\r\n            return <span>| |</span>;\r\n        }\r\n        return <span>&#9654;</span>\r\n    }\r\n\r\n    render(){\r\n        const {tracks} = this.props;\r\n\r\n        return(\r\n            <div>\r\n            {\r\n                tracks.map(track=>{\r\n                    const {id,name,album,preview_url} = track;\r\n                    return(\r\n                        <div\r\n                            key = {id} \r\n                            onClick ={this.playAudio(preview_url)} \r\n                            className = 'track' >\r\n                            <img src = {album.images[0].url} \r\n                            alt = \"track-artist\" \r\n                            className = 'track-image'/>\r\n                            <p className = 'track-text'>{name}</p>\r\n                            <p className = \"track-icon\"> {this.trackIcon(track)}></p>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tracks;"]},"metadata":{},"sourceType":"module"}